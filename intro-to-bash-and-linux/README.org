#+title: Readme
#+author: Atri Hegde
#+auto_tangle: t

* Table of Contents :TOC:
- [[#intro-to-bash-and-linux][Intro to Bash and Linux]]
  - [[#for-each-user][For each user]]
  - [[#globally][Globally]]
- [[#setup-script][Setup script]]
- [[#sshd-config][SSHD config]]
- [[#dockerfile][Dockerfile]]
  - [[#keep-container-alive][keep container alive]]
- [[#docker-compose][docker-compose]]
- [[#makefile][Makefile]]

* Intro to Bash and Linux

Practical consists of 100 users (user1 - user100) on a docker container.

** For each user
- have file ~/fruit.txt
- a couple dummy files in ~/tree
- have file rename.txt with a groceries todo list inside of it

** Globally
- Have grep installed


* Setup script

#+begin_src bash :tangle init.sh :shebang #!/bin/bash
mkdir /run/sshd
# Make sure script doesn't run twice
if ! grep -q user80 "/etc/passwd"; then
    # Create users
    for num in $(seq 1 80)
    do
        password=$(echo 'SESH_LINUX' | openssl passwd -6 -stdin)
        username=user$num
        useradd -m -s /bin/bash $username --password $password
        # all actions as user/group
        sudo runuser "$username" -g $username
        # Add files and folders for each user
        echo "Good job finding this hidden file!" > /home/$username/.hidden.txt
        echo "Tomatoes" > /home/$username/fruit.txt
        echo "- Grapes\n- Oranges\n- Peaches" > /home/$username/rename.txt
        mkdir /home/$username/tree && echo "Just a leaf" > /home/$username/tree/leaf.txt
        # Use root user/group
        sudo runuser "root" -g root
        # Create a file as root
        echo "high permissions" > /home/$username/perms.txt
    done
fi
#+end_src

* SSHD config

#+begin_src conf :tangle sshd_config
Include /etc/ssh/sshd_config.d/*.conf
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
AcceptEnv LANG LC_*
Subsystem       sftp    /usr/lib/openssh/sftp-server
PasswordAuthentication yes
Port 2222
#+end_src

* Dockerfile

#+begin_src dockerfile :tangle Dockerfile
FROM ubuntu:latest

RUN apt update

RUN DEBIAN_FRONTEND=noninteractive apt install ubuntu-minimal ubuntu-standard vim openssl openssh-server -y

COPY sshd_config /etc/ssh/sshd_config

EXPOSE 2222

RUN mkdir /run/sshd

COPY init.sh /init.sh
COPY entrypoint.sh /entrypoint.sh

RUN chmod +x /init.sh
RUN chmod +x /entrypoint.sh
RUN /init.sh

ENTRYPOINT ["/entrypoint.sh"]
#+end_src

** keep container alive

#+begin_src shell :shebang #!/bin/bash :tangle entrypoint.sh
/usr/sbin/sshd -D
while true; do sleep 1; done
#+end_src

* docker-compose

#+begin_src yaml :tangle docker-compose.yml
version: '3'

services:
  container:
    image: sesh_bash_linux
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "2222:2222"
#+end_src

* Makefile

Makefile to make our lives easier

#+begin_src makefile :tangle Makefile
default: help

build: ## Build image from scratch
		@docker-compose build --no-cache

run: ## Run docker compose
		@docker compose up --build

up: ## Run docker compose in daemon mode
		@docker compose up -d --build

down: ## Shut down the running docker daemon and delete its volumes
		@docker compose down -v

help: ## Display this help message
		@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n"} /^[$$()% a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)
#+end_src
